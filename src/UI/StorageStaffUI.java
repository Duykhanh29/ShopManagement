/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import model.Goods;
import java.util.logging.Level;
import java.util.logging.Logger;
import File.*;
import Lists.GoodsList;
import java.util.ArrayList;
import jdbc.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import File.*;
/**
 *
 * @author Admin
 */
public class StorageStaffUI extends javax.swing.JFrame {

    /**
     * Creates new form NhanVienKhoUI
     */
    GoodsFileIO goodsFileIO;
    GoodsList goodsList;
    GoodsJDBC goodsJDBC;
    ArrayList<Goods> listGoods = new ArrayList<>();
    FileIO fileIO = new FileIO();
    String staffID;
    DefaultTableModel defaultTableModel;
    int click = -1;

    public StorageStaffUI(String dataController) throws Exception {
        goodsFileIO=new GoodsFileIO();
        goodsList = new GoodsList();
        goodsList.setList(listGoods);
        goodsJDBC = new GoodsJDBC();
        listGoods = goodsJDBC.getData();
        goodsList.setList(listGoods);
        goodsFileIO.writeDataFromFile(goodsFileIO.fileGoods, listGoods);
        initComponents();
        staffID = dataController;
        defaultTableModel = (DefaultTableModel) goodsTable.getModel();
        this.setLocationRelativeTo(null);
        display();
    }

    private StorageStaffUI() {
    }

    public void display() {
        for (int i = 0; i < listGoods.size(); i++) {
            showTable((i + 1), listGoods.get(i));
        }
    }

    public void showTable(int index, Goods h) {
        defaultTableModel.addRow(new Object[]{
            index, h.getGoodsID(), h.getGoodsName(), h.getProducer(), h.getQuantity(), h.getImportedCost(), h.getSellingCost()
        });
    }

    public boolean emptyCheck() {
        if (idTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Input id");
            idTextField.requestFocus();
            return true;
        }
        if (nameTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Input name");
            nameTextField.requestFocus();
            return true;
        }
        if (producerTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Input producer");
            producerTextField.requestFocus();
            return true;
        }
        if (Integer.parseInt(quantitySpinner.getValue().toString()) == 0) {
            JOptionPane.showMessageDialog(rootPane, "Input quantity");
            quantitySpinner.requestFocus();
            return true;
        }
        if (Integer.parseInt(importedCostTextField.getText()) == 0 || importedCostTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Input imported Cost");
            importedCostTextField.requestFocus();
            return true;
        }
        
        return false;
    }

    public void showFormGoods(Goods h) {
        idTextField.setText(h.getGoodsID());
        nameTextField.setText(h.getGoodsName());
        producerTextField.setText(h.getProducer());
        quantitySpinner.setValue(h.getQuantity());
        showSellingCostLabel.setText(h.getSellingCost()+ "");
        importedCostTextField.setText(h.getImportedCost()+"");
    }

    public Goods getGoodsFromForm() {
        Goods h = new Goods();
        h.setSellingCost(Integer.parseInt(showSellingCostLabel.getText()));
        h.setImportedCost(Integer.parseInt(importedCostTextField.getText()));
        h.setQuantity(Integer.parseInt(quantitySpinner.getValue().toString()));
        h.setGoodsID(idTextField.getText());
        h.setGoodsName(nameTextField.getText());
        h.setProducer(producerTextField.getText());
        return h;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel32 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        producerTextField = new javax.swing.JTextField();
        importedCostTextField = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        quantitySpinner = new javax.swing.JSpinner();
        jLabel37 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        goodsTable = new javax.swing.JTable();
        jButton19 = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        showSellingCostLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel32.setText("ID");

        idTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextFieldActionPerformed(evt);
            }
        });

        jLabel33.setText("Name");

        jLabel34.setText("Producer");

        jLabel35.setText("Imported Cost");

        producerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                producerTextFieldnhaCungCapTextFieldActionPerformed(evt);
            }
        });

        jLabel36.setText("Quantity");

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel37.setText("Selling Cost");

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonjButton1ActionPerformed(evt);
            }
        });

        goodsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Id", "Name", "Producer", "Quantity", "Imported Cost", "Seling Cost"
            }
        ));
        goodsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goodsTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(goodsTable);
        if (goodsTable.getColumnModel().getColumnCount() > 0) {
            goodsTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            goodsTable.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        jButton19.setText("Back");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        resetButton.setText("reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton19)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(281, 281, 281)
                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addComponent(producerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(importedCostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showSellingCostLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane8)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(240, 240, 240))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButton19)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(producerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(importedCostTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(showSellingCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void producerTextFieldnhaCungCapTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_producerTextFieldnhaCungCapTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_producerTextFieldnhaCungCapTextFieldActionPerformed

    private void insertButtonjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonjButton1ActionPerformed
        // TODO add your handling code here:
        if (emptyCheck() == false) {
            try {
                String id = idTextField.getText();
                if (goodsList.checkExist(id) == false) {
                    String producer = producerTextField.getText();
                    String name = nameTextField.getText();
                    int quantity = Integer.parseInt(quantitySpinner.getValue().toString());
                    int importedCost = Integer.parseInt(importedCostTextField.getText());
                    int sellingCost =(int)Math.round(importedCost+importedCost*0.15);
                            //Integer.parseInt(sellingCostTextField.getText());
                            showSellingCostLabel.setText(sellingCost+"");
                    Goods h = new Goods(id, name, name, quantity, importedCost, sellingCost);
                    goodsJDBC.insertIntoDatabase(h);
                    listGoods=goodsJDBC.getData();
                    goodsFileIO.writeDataFromFile(goodsFileIO.fileGoods, listGoods);
                    defaultTableModel.setRowCount(0);
                    goodsList.setList(listGoods);
                    display();
                } else {
                    
                    JOptionPane.showMessageDialog(rootPane, "Please input other id");
                }

            } catch (Exception ex) {
                Logger.getLogger(StorageStaffUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_insertButtonjButton1ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        try {
            // TODO add your handling code here:
            StaffUI staffUI = new StaffUI(staffID);
            staffUI.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(StorageStaffUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (emptyCheck() == false) {
            if (click != -1) {
                try {
                    Goods oldH = goodsList.getGoodsAtIndex(click);
                    Goods newHH = getGoodsFromForm();
                    goodsJDBC.edit(oldH, newHH);
                    listGoods = goodsJDBC.getData();
                    goodsFileIO.writeDataFromFile(goodsFileIO.fileGoods, listGoods);
                    goodsList.setList(listGoods);
                    defaultTableModel.setRowCount(0);
                    display();
                } catch (Exception ex) {
                    Logger.getLogger(StorageStaffUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void goodsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goodsTableMouseClicked
        // TODO add your handling code here:
        if (listGoods.size() != 0) {
            int point = goodsTable.getSelectedRow();
            click = point;
            if (click != -1) {
                Goods h = goodsList.getGoodsAtIndex(click);
                showFormGoods(h);
            }
        }
    }//GEN-LAST:event_goodsTableMouseClicked

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        idTextField.setText("");
        nameTextField.setText("");
        producerTextField.setText("");
        quantitySpinner.setValue(0);
        importedCostTextField.setText("");
        showSellingCostLabel.setText("");
        searchTextField.setText("");
        defaultTableModel.setRowCount(0);
        display();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (listGoods.size() != 0) {
            if (click != -1) {
                try {
                    Goods h = goodsList.getGoodsAtIndex(click);
                    goodsJDBC.delete(h);
                    listGoods = goodsJDBC.getData();
                    goodsList.setList(listGoods);
                    goodsFileIO.writeDataFromFile(goodsFileIO.fileGoods, listGoods);
                    defaultTableModel.setRowCount(0);
                    display();
                } catch (Exception ex) {
                    Logger.getLogger(StorageStaffUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No data");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        if (listGoods.size() != 0) {
            String id = searchTextField.getText();
            if (id.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please input id");
            } else {
                Goods h = goodsList.getGoodsWithID(id);
                if (h != null) {
                    showFormGoods(h);
                    defaultTableModel.setRowCount(0);
                    showTable(1, h);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Not found");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No data");
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StorageStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StorageStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StorageStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StorageStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StorageStaffUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JTable goodsTable;
    private javax.swing.JTextField idTextField;
    private javax.swing.JTextField importedCostTextField;
    private javax.swing.JButton insertButton;
    private javax.swing.JButton jButton19;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField producerTextField;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel showSellingCostLabel;
    // End of variables declaration//GEN-END:variables
}
