/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Lists.*;
import dinhnghia.NhanVien;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jdbc.NhanVienJDBC;
import jdbc.TaiKhoanJDBC;

/**
 *
 * @author Admin
 */
public class LogIn extends javax.swing.JFrame {

    DanhSachNhanVien danhSachNhanVien;
    NhanVien nv;
    ArrayList<NhanVien> listStaff = new ArrayList<>();
    NhanVienJDBC nhanVienJDBC;
    TaiKhoanJDBC taiKhoanJDBC;
    ArrayList<NhanVien> listRole = new ArrayList<>();
    /**
     * Creates new form LogIn
     */
    public LogIn()  throws Exception{
        initComponents();
        danhSachNhanVien = new DanhSachNhanVien();
        nhanVienJDBC=new NhanVienJDBC();
        taiKhoanJDBC=new TaiKhoanJDBC();
        listStaff=nhanVienJDBC.getDataNhanVien();
        danhSachNhanVien.setList(listStaff);
     //   danhSachNhanVien.insertNhanVien();
        nv = new NhanVien();
        showComboBox();
    }

    private void showComboBox() {
        ArrayList<String> list = nv.getdSachChucVu();;
        for (String string : list) {
            roleComboBox.addItem(string);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roleComboBox = new javax.swing.JComboBox<>();
        userNameTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        logInButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboBoxActionPerformed(evt);
            }
        });

        userNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextFieldActionPerformed(evt);
            }
        });

        logInButton.setText("Log In");
        logInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(408, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(125, 125, 125))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(logInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(210, 210, 210))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(logInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTextFieldActionPerformed

    private void logInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInButtonActionPerformed

        if (String.valueOf(roleComboBox.getSelectedItem()).equals("Nhan vien ban hang")) {
            listRole = danhSachNhanVien.danhSachNhanVienBanHang();
            boolean value = false;
            for (int i = 0; i < listRole.size(); i++) {
                String userName = String.valueOf(userNameTextField.getText());
                if (userName.contains(listRole.get(i).getMaNV())) {
                    try {
                        NhanVienBanHangUI newUI = new NhanVienBanHangUI(userName);
                        //     NhanVienBanHangUI newUI = new NhanVienBanHangUI();
                        newUI.setVisible(true);
                        value = true;
                        this.dispose();
                    } catch (Exception ex) {
                        Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (value == false) {
                JOptionPane.showMessageDialog(this, "Ko dung userName");
            }

        } else if (String.valueOf(roleComboBox.getSelectedItem()).equals("Nhan vien kho")) {
            listRole = danhSachNhanVien.danhSachNhanVienKho();
            boolean value = false;
            for (int i = 0; i < listRole.size(); i++) {
                String userName = String.valueOf(userNameTextField.getText());
                if (userName.contains(listRole.get(i).getMaNV())) {
                    //NhanVienKhoUI newUI = new NhanVienKhoUI(userName);
                    NhanVienKhoUI newUI = new NhanVienKhoUI(userName);
                    newUI.setVisible(true);
                    value = true;
                    this.dispose();
                }
            }
            if (value == false) {
                JOptionPane.showMessageDialog(this, "Ko dung userName");
            }

        } else if (String.valueOf(roleComboBox.getSelectedItem()).equals("Quan ly")) {
            listRole = danhSachNhanVien.danhSachQuanLy();
            boolean value = false;
            for (int i = 0; i < listRole.size(); i++) {
                if (String.valueOf(userNameTextField.getText()).contains(listRole.get(i).getMaNV())) {
                    try {
                        AdminUI newUI = new AdminUI();
                        newUI.setVisible(true);
                        value = true;
                        this.dispose();
                    } catch (Exception ex) {
                        Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (value == false) {
                JOptionPane.showMessageDialog(this, "Ko dung userName");
            }
        }
    }//GEN-LAST:event_logInButtonActionPerformed

    private void roleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LogIn().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton logInButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables

}
